// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 用户模型
model User {
  id          String      @id @default(uuid())
  name        String
  pronouns    String?
  bio         String?
  createdAt   DateTime    @default(now())
  groups      UserGroup[] // 保留用户-群组关系，为后续扩展
  ownedGroups ChatGroup[] // 用户创建的群组（作为群主）
  messages    Message[]   // 添加这个：用户发送的消息
}

// 群组模型
model ChatGroup {
  id        String      @id @default(uuid())
  name      String
  ownerId   String      // 群主ID
  owner     User        @relation(fields: [ownerId], references: [id])
  members   UserGroup[] // 保留群组-成员关系，为后续扩展
  messages  Message[]
  topics    Topic[]
  createdAt DateTime    @default(now())
}

// 用户-群组关系（保留为后续扩展）
model UserGroup {
  userId    String
  groupId   String
  user      User        @relation(fields: [userId], references: [id])
  group     ChatGroup   @relation(fields: [groupId], references: [id])
  joinedAt  DateTime    @default(now())

  @@id([userId, groupId])
}

// 消息模型
model Message {
  id        String          @id @default(uuid())
  content   String
  userId    String
  groupId   String
  user      User           @relation(fields: [userId], references: [id])
  group     ChatGroup      @relation(fields: [groupId], references: [id])
  topicLinks MessageTopic[]
  createdAt DateTime       @default(now())
}

// 话题模型
model Topic {
  id        String          @id @default(uuid())
  name      String
  color     String?
  groupId   String
  group     ChatGroup      @relation(fields: [groupId], references: [id])
  messageLinks MessageTopic[]
  createdAt DateTime       @default(now())

  @@unique([name, groupId]) // 群内话题名称唯一
}

// 消息-话题关联
model MessageTopic {
  messageId String
  topicId   String
  message   Message   @relation(fields: [messageId], references: [id])
  topic     Topic     @relation(fields: [topicId], references: [id])
  createdAt DateTime  @default(now())

  @@id([messageId, topicId])
}
